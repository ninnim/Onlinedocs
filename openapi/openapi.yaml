openapi: 3.1.0
info:
  version: 1.0.0
  title: KHQR Payment
  # termsOfService: https://example.com/terms/
  contact:
    email: contact@example.com
    url: http://example.com/contact
  # license:
  #   name: Apache 2.0
  #   url: http://www.apache.org/licenses/LICENSE-2.0.html
  # x-logo:
  #   # url: LOGO.png
  description: >
    This is an **example** API to demonstrate features of the OpenAPI
    specification.

    # Introduction

    <b><font style="color:red">KHQR</font> Payment</b> is a service to allowing banks integration through REST API,
    It uses resource URLs with communication-both requests and responses relies on JSON-encoded format.
    We use standardize HTTP status codes and response status codes to make easies for developers validation.


    To call our APIs, you need to authorization with token by [registration.](https://www.google.com)

    
    ![](https://1508556034-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FcjUxrV0MGUtgNMQS2hBJ%2Fuploads%2FumiHqVn5Z8ifNlEoXNYw%2FPresentation3.gif?alt=media&token=b094b831-c713-45dd-ab9c-16facc17aa0d)

    describing your API in [OpenAPI/Swagger
    format](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md).

    It also demonstrates features of the
    [create-openapi-repo](https://github.com/Redocly/create-openapi-repo) tool
    and the [Redoc](https://github.com/Redocly/Redoc) documentation engine. Beyond
    the standard OpenAPI syntax, we use a few 
    [vendor extensions](https://github.com/Redocly/Redoc/blob/master/docs/redoc-vendor-extensions.md).

    # Get Started

    To get started with KHQR payment integration you need to follow of step that involve understanding the API's functionality, authentication, making request, handle response.

    <h2>Overview</h2>
    

    ![](https://1508556034-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FcjUxrV0MGUtgNMQS2hBJ%2Fuploads%2F9OWc1BKQsiR8LuRosCTS%2FKHQR%20Workflow%20Diagram%20v3.jpg?alt=media&token=f41eec7a-83d4-46f6-9b57-bb9723178483)



    
    1.Consumer open Bank app and scan **KHQR** code in the invoice.

    2.Consumer verify amount and other information then submit the payment.

      1.Issuing Bank verify bill with Bill24(**optional**).
      2.Bill24 response the verify result.

    3.Issuing Bank submit payment to Payment Network follow **KHQR** payment instruction.

      1.Acquiring Bank verify bill with Bill24 before submit payment.
      2.Bill24 response the verify result.

    4.Verify bill(**optional**)

      1.Acquiring Bank verify bill with Bill24 before submit payment.
      2.Bill24 response the verify result.

    5.Submit payment(**required**)

      1.Acquiring Bank submit payment to Bill24.
      2.Bill24 response the payment result.

    6.Bill24 send payment details to merchant system.

    <h2>Roadmap</h2>
    

    ![](https://1508556034-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FcjUxrV0MGUtgNMQS2hBJ%2Fuploads%2FwkSc0EE9BBtjhLQf5oJO%2FUntitledroadmap.jpg?alt=media&token=882f3544-f0c9-4663-8341-37353b4b6af4)

    # Status Codes

    <h2>HTTP 2XX status codes</h2>


    | STATUS CODE | Description |

    |---|---|

    | <font style="color:#00cc00">**200**</font> OK | The request succeed. |

    | <font style="color:#00cc00">**201**</font> Created | The request succeed and a resource was created. |


    <h2>HTTP 4XX status codes</h2>


    | STATUS CODE | Description |

    |---|---|

    | <font style="color:#ff9900">**400**</font> Bad Requested | The request could not be understood by the server. |

    | <font style="color:#ff9900">**401**</font> Unauthorized | The request requires user authentication. |


    <h2>HTTP 5XX status codes</h2>


    | STATUS CODE | Description |

    |---|---|

    | <font style="color:#cc0000">**500**</font> Internal Server Error | An internal server error occurred. |

    | <font style="color:#cc0000">**502**</font> Bad Gateway | The server that your request was forwarded to is not responding. |

    | <font style="color:#cc0000">**504**</font> BGateway Timeout | The request timeout. |

    # Regiteration 
    
    Please fill in this form to get token or API key

    <form action="/action_page.php">
    <label for="fname">Bank name:</label><br>
    <input type="text" id="fname" Bank name="fname"><br>
    <label for="lname">Email:</label><br>
    <input type="text" id="lname" name="lname"><br><br>
    <label for="lname">Phone:</label><br>
    <input type="text" id="lname" name="lname"><br><br>
    <input type="submit" value="Register Token">
    </form> 


    <html>
    <head>
    <title>Contact Form</title>
    <link rel="stylesheet" href="style.css">
    </head>
    <body>
    <h1>Contact Form</h1>
    <form action="contact.php" method="post">
    <input type="text" name="name" placeholder="Your name">
    <input type="email" name="email" placeholder="Your email">
    <input type="text" name="subject" placeholder="Subject">
    <textarea name="message" placeholder="Your message"></textarea>
    <button type="submit">Submit</button>
    </form>
    </body>
    </html>
  


  

# tags:
#   - name: Echo
#     description: Example echo operations.
#   - name: User
#     description: Operations about users.
#   - name: Tag
#     description: This is a tag description.
servers:
  - url: https://{bankapi-demo.bill24.net}payment/inquiry
    variables:
      bankapi-demo.bill24.net:
        default: www
        description: Your bankapi id
  - url: https://bankapi-demo.bill24.net
paths:
  # /users/{username}:
  #   $ref: paths/users_{username}.yaml
  # /echo:
  #   $ref: paths/echo.yaml
  # /pathItem:
  #   $ref: paths/pathItem.yaml
  # /pathItemWithExamples:
  #   $ref: paths/pathItemWithExamples.yaml
  /payment/inquiry:
    $ref: paths/inquiry.yaml
  /qr/verify:
    $ref: paths/verify.yaml
  /qr/v2/confirm:
    $ref: paths/confirm.yaml
  /get:
    $ref: paths/test.yaml
components:
  securitySchemes:
    main_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://example.com/api/oauth/dialog
          scopes:
            read:users: read users info
            write:users: modify or remove users
    api_key:
      type: apiKey
      in: header
      name: token
    basic_auth:
      type: http
      scheme: basic


